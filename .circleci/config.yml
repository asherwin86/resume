version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.13

executors:
  default:
    docker:
      - image: circleci/node:10.17.0

commands:
  restore_node:
    steps:
      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}-{{ .Branch }}
  save_node:
    steps:
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}-{{ .Branch }}
          paths:
            - node_modules
  store_build_artifacts:
    steps:
      - store_artifacts:
          path: .next

jobs:
  build:
    executor:
      name: default
    steps:
      - checkout
      - restore_node
      - run: npm install
      - save_node

  deploy:
    parameters:
      env:
        type: enum
        enum: ["production", "dev"]
      aws-access-key-id:
        type: env_var_name
      aws-secret-access-key:
        type: env_var_name
      aws-region:
        type: env_var_name
    executor:
      name: default
    steps:
      - checkout
      - restore_node
      - run: npm install
      - save_node
      - aws-cli/install
      - aws-cli/configure:
          aws-access-key-id: << parameters.aws-access-key-id >>
          aws-secret-access-key: << parameters.aws-secret-access-key >>
          aws-region: <<parameters.aws-region >>
      - run: npm deploy:<< parameters.env >>
      - store_build_artifacts

workflows:
  build_and_deploy:
    jobs:
      - build

      # dev
      - deploy: &deploy
          env: dev
          aws-access-key-id: PROVIDER_KEY
          aws-secret-access-key: PROVIDER_SECRET_KEY
          aws-region: PROVIDER_REGION

          requires:
            - build
          name: deploy_dev
          filters:
            branches:
              only: dev
            tags:
              ignore: /.*/

      # production
      - deploy:
          <<: *deploy

          env: production

          name: deploy_production
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.+$/